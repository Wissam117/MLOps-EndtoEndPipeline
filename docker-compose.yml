version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
      - auth-service
    networks:
      - app-network
    restart: unless-stopped

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - db
      - auth-service
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app_db
      - AUTH_SERVICE_URL=http://auth-service:5001
      - SECRET_KEY=dev_secret_key
    networks:
      - app-network
    restart: unless-stopped

  # Authentication service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/auth_db
      - SECRET_KEY=dev_secret_key
    networks:
      - app-network
    restart: unless-stopped

  # Database service
  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
